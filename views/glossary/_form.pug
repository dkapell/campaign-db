if (backto)
    input(type="hidden" name="backto" value=backto)
.row.my-1
    .col-md
        label.control-label(for="glossary_entry_name") Name
        input.form-control(type="text",placeholder="Name",name="glossary_entry[name]",value=glossary_entry.name,id='glossary_entry_name',required)
        div.invalid-feedback Please choose a valid name

    .col-md-3
        label.control-label(for="glossary_entry_type") Type
        select.form-select.select2(name="glossary_entry[type]",id="glossary_entry_type" data-placeholder='Type')
            option
            for type of ['in character', 'out of character']
                option(value=type selected=glossary_entry.type===type)= capitalize(type)


    .col-md-3
        label.control-label(for="glossary_entry_status_id") Status
        select.form-select.complex-select2(name="glossary_entry[status_id]",id="glossary_entry_status_id" data-placeholder='Status' required)
            for status in glossary_statuses
                option(
                    value=status.id
                    selected=Number(glossary_entry.status_id)===status.id
                    title=status.name
                    data-text= `<div class="badge text-bg-${status.class} glossary_entry-status badge-pill">${status.name}</div>`
                    data-html=`<div class="text-${status.class}">${status.name}</div><div class="ml-2">${status.description?status.description:''}</div>`
                )= capitalize(status.name)

.row.my-2
    .col-md
        select.form-select.tag-select2(multiple, name="glossary_entry[tags]",id="glossary_entry_tags" data-placeholder="Tags")
            for tag in glossary_tags
                -let selected = false;
                -if (_.findWhere(glossary_entry.tags, {id:tag.id})) { selected = true; }
                -if (glossary_entry.tags && glossary_entry.tags.indexOf(tag.id) !== -1) { selected = true; }
                option(value=tag.id selected=selected)= tag.name
            for tag in glossary_entry.tags
                if isNaN(tag) && !_.isObject(tag)
                    option(value=tag selected=true)= tag


.row.my-2
    .col
        +markdownEditor('Content', 'glossary_entry_content', 'glossary_entry[content]', 10, 300, glossary_entry.content, true, {previewUrl: '/glossary/preview', showImageLink: checkPermission('gm')})

.row.my-1
    .col
        button.btn.btn-primary.me-2(type="submit")= glossary_entry.id?'Update':'Create'
        if glossary_entry.id && checkPermission('gm')
            button.btn.btn-danger.me-2#delete-glossary-btn(
                role='button'
                url=`/glossary/${glossary_entry.id}`
                data-back='/glossary'
            ) Delete
        a.btn.btn-link(href="/glossary") Cancel


