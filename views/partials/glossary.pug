mixin glossaryMenu(entries, showSearch)
    .glossary-menu.sticky-top.w-100#glossaryMenu
        h2.mb-3#glossaryMenuLabel Glossary
        if checkPermission('gm')
            .d-grid.gap-2
                a.btn.btn-sm.btn-outline-success.mb-2(href='/glossary/new')
                    span.fas.fa-plus.me-1
                    | New Entry
            if reviewReady
                .d-grid.gap-2
                    a.btn.btn-sm.btn-outline-info.my-2(href='/glossary/review')
                        span.fas.fa-tasks.me-1
                        | Review Entries
        if showSearch
            form.form#glossarySearchForm(method="GET" action="/glossary/search")
                .input-group.input-group-sm.mb-2
                    input.form-control.border-end-0.border#glossarySearch(name="query" placeholder="Search")
                    button.btn.btn-outline-secondary.border-start-0.border(type="submit")
                        i.fas.fa-search
        .section-nav.glossary-menu-entries.nav.flex-column.w-100.flex-nowrap#glossaryMenu
            - types = ['in character', 'out of character']
            each type in types
                if _.has(entries, type)
                    +typeMenu(type, entries[type])


mixin typeMenu(type, data)
    nav.nav.flex-column.toc-entry.nav-fill
        a.d-block.menu-type-header.menu-link( href=`#type-${type.replace(/\W+/g, '_')}` )= capitalize(type)
        nav.flex-column.toc-entry.type-section.ps-2(id=`menu-type-${type.replace(/\W+/g, '_')}`)
            - const tags = (_.keys(data.tags)).sort();
            each tag in tags
                - const entryList = data.tags[tag]
                +tagMenu(tag, entryList)
            if data.notags.length
                +tagMenu('not tagged', data.notags, true)

mixin tagMenu(tag, data, italic)
    - minLengthForShow = 0
    nav.nav.flex-column.toc-entry.nav-fill
        a.d-block(
            data-bs-toggle="collapse"
            href=`#menu-tag-${tag.replace(/\W+/g, '_')}`
            aria-expanded=data.length<=minLengthForShow?"true":"false"
            aria-controls=`menu-tag-${tag.replace(/\W+/g, '_')}`
        )
            strong
                if italic
                    i= capitalize(tag)
                else
                    = capitalize(tag)
            span.pe-2.float-end
                i.fas.fa-chevron-up
                i.fas.fa-chevron-down
        nav.flex-column.toc-entry.tag-section.collapse.ps-2(id=`menu-tag-${tag.replace(/\W+/g, '_')}` class=[data.length<=minLengthForShow?'show':''])
            for entry in data
                +entryMenu(entry)

mixin entryMenu(entry)
    a.nav-link.my-0.p-0.entry-link(href=`#entry-${entry.name.replace(/\W+/g, '_').toLowerCase()}`)= entry.name

mixin typeLayout(type, data, anchor)
    h3(id=`type-${type.replace(/\W+/g, '_')}`)
        a(name=`type-${type.replace(/\W+/g, '_')}`)= capitalize(type)
    dl
        for entry in data.all
            +entryLayout(entry, anchor)

mixin entryLayout(entry, anchor)
    .entry-body.border-start.border-white.ps-2(id=`entry-${entry.name.replace(/\W+/g, '_').toLowerCase()}`)
        dt
            a.me-3(href=`/glossary/${entry.id}/${querystring.escape(entry.name)}`)= entry.name
            for tag in entry.tags
                a(href=`/glossary/tag/${tag.id}/${tag.name}`)
                    span.badge.text-bg-secondary.mx-1= tag.name
            if checkPermission('contrib')
                .float-end.text-end
                    if checkPermission('gm')
                        a.btn.btn-sm.btn-outline-info.me-2.entry-edit-btn.invisible(href=`/glossary/${entry.id}/edit` data-bs-toggle="tooltip" title=`Edit ${entry.name}`)
                            i.fas.fa-edit
                    if entry.status && checkPermission('contrib')
                        .badge.badge-pill.skill-status(class=`text-bg-${entry.status.class}`)
                            = capitalize(entry.status.name)

        dd.border-bottom.border-light.glossary-list-entry !{anchor?entry.content.anchor:entry.content.entry}
