if (backto)
    input(type="hidden" name="backto" value=backto)
.row.my-2
    .col
        label.control-label(for="skill_source_name") Name
        input.form-control(type="text",placeholder="Name",name="skill_source[name]",value=skill_source.name,id='skill_source_name',required)
        div.invalid-feedback Please choose a valid name

.row.my-2
    .col
        label.control-label(for="skill_source_type_id") Source Type
        select.form-control.select2(name="skill_source[type_id]",id="skill_source_type_id" data-placeholder='Source Type' required)
            option
            for type in skill_source_types
                option(value=type.id selected=skill_source.type_id===type.id)= capitalize(type.name)

    .col
        label.control-label(for="skill_source_cost") Cost
        .input-group
            input.form-control.text-end.pe-3(type="number",placeholder="Cost",name="skill_source[cost]",value=skill_source.cost,id='skill_source_cost')
            span.input-group-text #{currentCampaign.renames.cp.singular}
    .col
        label.control-label(for="skill_source_max_skills") Max Skills
            small.ms-1 (0 or unset for unlimited)
        input.form-control.text-end.pe-3(type="number",placeholder="Max Skills",name="skill_source[max_skills]",value=skill_source.max_skills,id='skill_source_max_skills')



.row.my-2
    .col
        +markdownEditor('Description (Player Facing)', 'skill_source_description', 'skill_source[description]', 5, 100, skill_source.description, true, {showImageLink: checkPermission('gm')})

.row.my-2
    .col
        +markdownEditor('Notes (GM Only)', 'skill_source_notes', 'skill_source[notes]', 5, 80, skill_source.notes)

.row.my-2
    .col
        label.control-label(for='skill_source_users') Available to
        select.form-select.complex-select2#skill_source_users(name="skill_source[users]" data-placeholder='Select User' multiple)
            option
            for user in users
                option(
                    value=user.id
                    selected=_.indexOf(skill_source.users, user.id) !== -1
                    title=user.name
                    data-text=`<strong>${user.name}</strong> (<i>${user.typeForDisplay}</i>)`
                    data-html=`<span class='float-end badge text-bg-info'>${user.typeForDisplay}</span><strong>${user.name}</strong>`
                ) #{user.name} (#{user.typeForDisplay})


fieldset.mb-2.border.p-2.rounded
    label.h5.w-100.mb-1#source-builder-heading(role='button' for="skill-config", data-bs-toggle="collapse" data-bs-target="#source-config" aria-expanded="false") Character Builder Configuration
            span.float-end.ps-2
                i.fa.fa-chevron-up
                i.fa.fa-chevron-down


    #source-config.collapse(aria-labelledby="source-builder-heading")
        .row.my-2
            .col
                .form-check.form-switch
                    input.form-check-input(type="checkbox", name="skill_source[required]", id="skill_source_required", checked=skill_source.required)
                    label.form-check-label(for="skill_source_required") Required
                    .form-text Automatically add this source to characters
            .col
                .form-check.form-switch
                    input.form-check-input(type="checkbox", name="skill_source[display_to_pc]", id="skill_source_display_to_pc", checked=skill_source.display_to_pc)
                    label.form-check-label(for="skill_source_display_to_pc") Display to PCs
                    .form-text Make available to PCs in the skills list and character builder
            .col
                .form-check.form-switch
                    input.form-check-input(type="checkbox", name="skill_source[display_to_staff]", id="skill_source_display_to_staff", checked=skill_source.display_to_staff)
                    label.form-check-label(for="skill_source_display_to_staff") Display to Staff
                    .form-text Make available to non-GM Staff in the character builder
        .row.my-2
            .col-md-9
                label.control-label(for="skill_source_requires") Prereqs
                select.form-control.select2(multiple, name="skill_source[requires]",id="skill_source_requires" data-placeholder='Prereqs')
                    for source in skill_sources
                        if (source.id !== skill_source.id)
                            option(value=source.id selected=_.indexOf(skill_source.requires, source.id) !== -1) #{capitalize(source.type.name)}: #{source.name}
            .col-md-3
                label.control-label(for="skill_source_require_num") Number of Prereqs
                input.form-control.text-end#skill_source_require_num(type="number",placeholder="Usually 1",name="skill_source[require_num]",value=skill_source.require_num)

        .row.my-2
            .col
                label.control-label(for="skill_source_conflicts") Conflicts
                select.form-control.select2(multiple, name="skill_source[conflicts]",id="skill_source_conflicts" data-placeholder='Conflicts')
                    for source in skill_sources
                        if source.id !== skill_source.id
                            option(value=source.id selected=_.indexOf(skill_source.conflicts, source.id)!== -1) #{capitalize(source.type.name)}: #{source.name}
        #provides-list
                +providesHeader()
                - let i = 0;
                for provides in skill_source.provides
                    +provides(provides, 'skill_source', i)
                    - i++;
                +provides({}, 'skill_source', 'new')


.row.my-2
    .col
        button.btn.btn-primary(type="submit")= skill_source.id?'Update':'Create'
        a.btn.btn-link(href="/skill_source") Cancel


