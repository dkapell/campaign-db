input(type="hidden" name="scene_feedback[survey_response_id]" value=attendance.post_event_survey_response_id)
input(type="hidden" name="scene_feedback[scene_id]" value=scene.id)
if (backto)
    input(type="hidden" name="backto" value=backto)
if field.description
    .row.my-2
        .col
            .form-text!=marked.parseInline(field.description, {breaks:true})

.row.my-2
    .col
        strong Timeslot:
        span.ms-2= scene.timeslots[0].name
        if scene.timeslots[0].display_name
            span.ms-1 (#{scene.timeslots[0].display_name})

    if scene.writer
        .col
            strong Writer:
            span.ms-2= scene.writer
            if scene.additional_writers.length
                span.ms-1 (#{_.pluck(scene.additional_writers, 'name').join(', ')})

.row.my-2
    .col
        strong Staff/NPCs:
        span.ms-2= scene.staff.join(', ')
if scene.description || scene.printout_note
    .row.my-1
        .col
            label.w-100#css-heading(for="scene_description", data-bs-toggle="collapse" data-bs-target="#scene_description" aria-expanded="false" area-controls="css-scene_description")
                strong Description
                i.expand-text-shown.ms-4 (click to hide)
                i.expand-text.ms-4 (click to show)
                span.float-end.ps-2
                    i.fa.fa-chevron-up
                    i.fa.fa-chevron-down

            #scene_description.collapse.p-2(aria-labeledby="css-heading")
                if scene.description
                    p!=marked.parseInline(scene.description, {breaks:true})
                if scene.printout_note
                    p!=marked.parseInline(scene.printout_note, {breaks:true})
-
    const rows = field.rows?Number(field.rows):3;
    const height = rows * 24;
.row.my-2
    .col
        .custom-event-field
            +markdownEditor(`Feedback for ${capitalize(user_type_map['core staff'].name)} only`, 'scene_gm_feedback', 'scene_feedback[gm_feedback]', rows, height, scene.gm_feedback, false, {disabled:disabled, maxlength:field.maxlength, saveIndicator:true})

.row.mt-2.mb-1
    .col
        .custom-event-field
            +markdownEditor('Feedback for NPCs', 'scene_npc_feedback', 'scene_feedback[npc_feedback]', rows, height, scene.npc_feedback, false, {disabled:disabled, maxlength:field.maxlength, saveIndicator:true})


if (!modal)
    .row.my-2
        .col
            button.btn.btn-primary(type="submit" disabled=disabled)= skill_type.id?'Update':'Create'
            a.btn.btn-link(href="/skill_type") Cancel


