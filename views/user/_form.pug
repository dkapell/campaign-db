if (backto)
    input(type="hidden" name="backto" value=backto)
- console.log(user)
if checkPermission('admin')
    .row.my-2
        .col-md
            label.control-label(for="user_name") Name
            input.form-control#user_name(type="text",placeholder="Name",name="user[campaign_user_name]",value=user.name,required)
            div.invalid-feedback Please choose a valid name

    if user.sso_name
        .row.my-2
            .col-md
                label.control-label(for="user_sso_name") Name from Google
                input.form-control#user_sso_name(type="text",placeholder="Name",value=user.sso_name,disabled)

    .row.my-2
        .col-md
            label.control-label(for="user_description") Email
            input.form-control#user_description(type="email", placeholder="Email", name="user[email]",value=user.email,required)

    .row.my-2
        .col-md
            label.control-label(for="user_type") User Type
            select.form-control.select2#user_type(name="user[type]")
                for type in [ 'admin', 'core staff', 'contributing staff', 'event staff', 'player','none']
                    option(value=type selected=user.type===type)= capitalize(type)
if checkPermission('gm')
    .row.my-2
        .col-md
            label.control-label(for="user_drive_folder") Player Drive Folder (PC Facing, does not grant access)
            input.form-control#user_drive_folder(type="text",placeholder="URL",name="user[drive_folder]",value=user.drive_folder)
            div.invalid-feedback Please enter a valid drive folder link

    .row.my-2
        .col-md
            label.control-label(for="user_staff_drive_folder") Staff Drive Folder (Staff Facing, does not grant access)
            input.form-control#user_staff_drive_folder(type="text",placeholder="URL",name="user[staff_drive_folder]",value=user.staff_drive_folder)
            div.invalid-feedback Please enter a valid drive folder link
    .row.my-2.mb-3
        .col-md
            label.control-label(for='user_image') User Image
            input#user_image_id(
                type='hidden'
                value=user.image_id
                name="user[image_id]"
            )
            .existing-image(
                style=user.image?'':'display:none'
            )
                .row
                    .col-md-4
                        a.btn.clear-image-btn.btn-outline-danger Remove Image
                    .col-md
                        image.mx-auto.img-fluid.image-container.d-block(
                            style='max-height:100px'
                            src=user.image?user.image.thumbnailUrl:null
                        )
            .new-image(
                style=user.image?'display:none':''
            )
                input.form-control.image-file-picker#user_image_picker(
                    type="file"
                )
                .row.my-2.image-details-row(style='display:none')
                    .col.upload-type
                    .col.upload-size

            .image-upload-progress.progress(
                    role="progressbar"
                    aria-label="Basic example"
                    aria-valuenow="0"
                    aria-valuemin="0"
                    aria-valuemax="100"
                    style="display:none"
                )
                    .progress-bar(style="width: 0%")
                        .progress-bar-label
            .col-sm-6.offset-sm-3.text-center.image-saving(style="display:none")
                .spinner-border.m-3(role="status" style="width: 2rem; height: 2rem;")
                    .visually-hidden Saving Image


if currentCampaign.documentations
    for documentation in currentCampaign.documentations
        if !documentation.staff_only || checkPermission('gm')
            .row.my-2
                .col-md
                    input(type="hidden" name=`user[documentations][${documentation.id}][id]` value=documentation.id)
                    - userDoc = _.findWhere(user.documentations, {documentation_id:documentation.id});
                    if documentation.valid_from
                        label.control-label(for=`documentation-${documentation.id}-valid_date`)= documentation.name
                        input.form-control.date-input(
                            id=`documentation-${documentation.id}-valid_date`
                            type="text"
                            placeholder="Date"
                            name=`user[documentations][${documentation.id}][valid_date_date]`
                            value=userDoc?userDoc.valid_date_date:null
                            autocomplete="off"
                        )
                    else
                        .form-check.form-switch
                            input.form-check-input(
                                id = `documentation-${documentation.id}-valid`
                                type="checkbox"
                                name=`user[documentations][${documentation.id}][valid]`
                                checked=!!userDoc
                            )
                            label.form-check-label(for=`documentation-${documentation.id}-valid`) #{documentation.name} Submitted
if checkPermission('gm')
    .row.my-2
        .col-md
            +markdownEditor('Notes', 'user_notes', 'user[notes]', 5, 100, user.notes, true)

if checkPermission('admin')
    .row.my-2
        .col-md
            label.control-label(for="user_permissions") Extra Permissions
            select.form-control.select2#user_type(name="user[permissions]" multiple)
                for type in config.get('permissions')
                    option(value=type selected=_.indexOf(user.permissions, type) !==-1)= capitalize(type)

.row.my-2
    .col-md
        button.btn.btn-primary(type="submit")
            i.fa.fa-save.me-1.submit-icon
            = user.id?'Update':'Create'
        a.btn.btn-link(href="/user") Cancel


