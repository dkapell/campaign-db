extends ../layout-panel
include ../partials/scene
include ../partials/schedule

block intro
    -
        locations.push({id:'busy', name:'Special', tags:[]})
        let xAxis = locations
        let yAxis = timeslots
        let xAxisType = 'location'
        let cellsPerSlot = 6;
        let maxScenesPerSlot = 3;
        let rowHeight = 50;
        if (currentCampaign.schedule_y_location){
            xAxis = timeslots;
            yAxis = locations;
            xAxisType = 'timeslot'
            rowHeight = rowHeight / cellsPerSlot;
        }

        const columns = xAxis.length*(xAxisType==='location'?cellsPerSlot:1) + (xAxisType==='location'?2:1);
        const rows = yAxis.length*(xAxisType!=='location'?cellsPerSlot:1) + (xAxisType!=='location'?2:1);
        const showDayTime = (_.where(timeslots, {nighttime:true})).length;
        const showOutdoors = (_.where(locations, {outdoors:true})).length;

    input#cellsPerSlot(type='hidden' value=cellsPerSlot)
    input#xAxisType(type='hidden' value=xAxisType)
    input#locationColumns(type='hidden' value=xAxis.length*(xAxisType==='location'?cellsPerSlot:1) )
    input#locationRows(type='hidden' value=yAxis.length*(xAxisType!=='location'?cellsPerSlot:1) )
    input#eventId(type='hidden' value=event.id)
    input#scheduleType(type='hidden' value='display')
    input#userType(type='hidden' value=checkPermission('event')?'staff':'player')
    input#csrfToken(type='hidden' value=csrfToken)

block maincontent
    h5 Schedule #{scheduleName}
    .container.my-0
        .row.my-0
            .col.my-2.alert.alert-success.alert-dismissible#schedule-success(style='display:none')
                i.fas.fa-info.me-2

                span.alert-text
                button.btn-close(type="button" aria-label="Close")

        .row.my-0
            .col.my-2.alert.alert-warning.alert-dismissible#schedule-alert(style='display:none')
                i.fa.fa-exclamation-triangle.me-2

                span.alert-text
                button.btn-close(type="button" aria-label="Close")

    if !checkPermission('contrib')
        .container
            .row-my-2
                .col
                    .form-check.form-switch
                        input.form-check-input#highlight-user-scenes(type="checkbox")
                        label.form-check-label(for="highlight-user-scenes") Highlight my Scenes


    .row.my-2
        #schedule-container-grid.d-grid.col(
            style=`grid-template-columns: repeat(${columns}, 1fr); grid-auto-rows: minmax(${rowHeight}px, auto);`
        )
            each xItem, idx in xAxis
                -
                    const posXstart = (idx * (xAxisType==='location'?cellsPerSlot:1)) + 2;
                if xAxisType === 'location'
                    div.location-header.text-center.align-bottom.mb-1.schedule-cell(
                        id=`location-${xItem.id}-header`
                        data-location-id=xItem.id
                        style=`grid-row: 1; grid-column: ${posXstart} / span ${(xAxisType==='location'?cellsPerSlot:1)}; min-width:200px`
                    )
                        +locationName(xItem, showOutdoors)
                        if checkPermission('event')
                            div.text-start.px-2
                                +locationTags(xItem)
                else
                    div.timeslot-header.text-center.align-bottom.mb-1.schedule-cell(
                        id=`timeslot-${xItem.id}-header`
                        data-timeslot-id=xItem.id
                        style=`grid-row: 1; grid-column: ${posXstart} / span ${(xAxisType==='location'?cellsPerSlot:1)};min-width:200px`

                    )
                        span.flex-fill.text-center
                            +timeslotName(xItem, false, 'unscheduled', showDayTime)

            each yItem, row in yAxis
                -
                    const posY = (row * (xAxisType!=='location'?cellsPerSlot:1)) + 2 ;
                if xAxisType === 'location'
                    div.timeslot-header.schedule-cell.d-flex.align-items-center.align-center.y-header.px-2.text-nowrap(
                        id=`timeslot-${yItem.id}-header`
                        data-timeslot-id=yItem.id
                        style=`grid-row:${posY}; grid-column: 1`
                    )
                        span.flex-fill.text-center
                            +timeslotName(yItem, false, 'unscheduled', showDayTime)
                else
                    div.timeslot-header.schedule-cell.text-center.align-bottom.schedule-cell.y-header.px-2.text-nowrap(
                        id=`location-${yItem.id}-header`
                        data-location-id=yItem.id
                        style=`grid-row:${posY} / span ${cellsPerSlot}; grid-column: 1; mix-width:180px`
                    )
                        +locationName(yItem, showOutdoors)
                        if checkPermission('event')
                            div.text-start.px-2
                                +locationTags(yItem)


                each xItem, idx in xAxis
                    -
                        const posXstart = (idx * (xAxisType==='location'?cellsPerSlot:1)) + 2;
                        const posY = (row * (xAxisType!=='location'?cellsPerSlot:1)) + 2 ;
                        const timeslot = xAxisType==='location'?yItem:xItem
                        const location = xAxisType==='location'?xItem:yItem

                    div.schedule-cell.schedule-slot.border.overflow-visible(
                        id=`cell-timeslot-${timeslot.id}-location-${location.id}`
                        data-location-id=location.id
                        data-timeslot-id=timeslot.id
                        data-pos-x=posXstart
                        data-pos-y=posY
                        data-location-multiple=location.multiple_scenes?'true':'false'
                        data-children-count=maxScenesPerSlot
                        style=`grid-row: ${posY} /span ${(xAxisType!=='location'?cellsPerSlot:1)}; grid-column: ${posXstart} / span ${(xAxisType==='location'?cellsPerSlot:1)};`
                    )
                        span.float-end.schedule-drop-indicator.m-1.text-warning.schedule-drop-requested Weak Match
                        span.float-end.schedule-drop-indicator.m-1.text-info.schedule-drop-required Strong Match
                        span.float-end.schedule-drop-indicator.m-1.text-success.schedule-drop-suggested Suggested
                        span.float-end.schedule-drop-indicator.m-1.text-danger.schedule-drop-rejected Rejected

            each scene in scenes
                if checkPermission('event') || scene.display_to_pc
                    +sceneItem(scene, xAxisType, cellsPerSlot)

            +nullBusyItem(xAxisType, cellsPerSlot)
    if checkPermission('contrib')
        .container
            .row.my-2
                .col
                    select.form-select.complex-select2#schedule-user-picker(
                        data-allow-clear="true"
                        data-placeholder='Attendee'
                    )
                        option
                        for attendance in event.attendees
                            if attendance.attending
                                - const type = capitalize(attendance.user.typeForDisplay)
                                option(
                                    value=attendance.user.id
                                    title=attendance.user.name
                                    data-text=`<span class="${attendance.user.type === 'player'?'text-dark':'text-danger'}"><strong>${type}</strong>:</span> ${attendance.user.name}`
                                    data-html=`<span class="${attendance.user.type === 'player'?'text-dark':'text-danger'}"><strong>${type}</strong>:</span> ${attendance.user.name}`
                                ) #{capitalize(attendance.user.name)} (#{type})
                -
                    const tags = [];
                    for (const scene of scenes){
                        for (const tag of scene.tags){
                            tags.push(tag.name);
                        }
                    }
                if tags.length
                    .col-3
                        select.form-select.complex-select2.float-end#schedule-tag-picker(
                                data-placeholder='Filter by Tag'
                            )
                                option
                                option(
                                    value="-1"
                                    data-text='<i>All</i>'
                                    data-html='<i>All</i>'
                                ) All
                                for tag in _.uniq(tags.sort())
                                    option(
                                        title=tag
                                        data-text=`<span class="badge text-bg-info">${tag}</span>`
                                        data-html=`<span class="badge text-bg-info">${tag}</span>`
                                        value=tag
                                    )= tag




append styles
    link(rel='stylesheet' href='/stylesheets/schedule.css')
append scripts
    script(src='https://cdn.jsdelivr.net/npm/async@3.2.6/dist/async.min.js')
    script(src='https://code.jquery.com/ui/1.13.2/jquery-ui.min.js')
    script(src='/javascripts/templates/event/sceneDetails.js')
    script(src='/javascripts/schedule/schedule.js')
