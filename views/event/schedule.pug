extends ../layout
include ../partials/scene

block content
    -
        const maxScenesPerSlot = 3;
        const cellsPerSlot = 6;
        const headerColumns = 3;
        const columns = locations.length*cellsPerSlot + headerColumns;
        const rowHeight = 45;
    input#cellsPerSlot(type='hidden' value=cellsPerSlot)
    input#locationColumns(type='hidden' value=locations.length*cellsPerSlot)
    input#eventId(type='hidden' value=event.id)
    input#csrfToken(type='hidden' value=csrfToken)

    .container.my-0
        .row.my-0
            .col.my-2.alert.alert-warning.alert-dismissible#schedule-alert(style='display:none')
                i.fa.fa-exclamation-triangle.me-2

                span.alert-text
                button.btn-close(type="button" aria-label="Close")

    .row.my-2
        .col.px-4
            #schedule-container(
                style=`grid-template-columns: repeat(${columns}, 1fr); grid-auto-rows: minmax(${rowHeight}px, auto);`
            )

                each location, idx in locations
                    -
                        const posXstart = (idx * cellsPerSlot) + headerColumns + 1;

                    div.location-header.text-center.align-bottom.mb-1.schedule-cell(
                        id=`location-${location.id}-header`
                        data-location-id=location.id
                        style=`grid-row: 1; grid-column: ${posXstart} / span ${cellsPerSlot}`
                    )
                        strong=location.name
                        div.text-start.px-2
                            +locationTags(location)

                each timeslot, row in timeslots
                    div.timeslot-header.schedule-cell.d-flex.align-items-center.align-center(
                        id=`timeslot-${timeslot.id}-header`
                        data-timeslot-id=timeslot.id
                        style=`grid-row:${row+2}; grid-column: 1 / span ${headerColumns}`
                    )
                        span.flex-fill.text-center
                            +timeslotName(timeslot)

                    each location, idx in locations
                        -
                            const posXstart = (idx * cellsPerSlot) + headerColumns + 1;
                            const posY = row+2;
                        div.schedule-cell.schedule-slot.border.overflow-visible(
                            id=`cell-timeslot-${timeslot.id}-location-${location.id}`
                            data-location-id=location.id
                            data-timeslot-id=timeslot.id
                            data-pos-x=posXstart
                            data-pos-y=posY
                            data-location-multiple=location.multiple_scenes?'true':'false'
                            data-children-count=maxScenesPerSlot
                            style=`grid-row: ${row+2}; grid-column: ${posXstart} / span ${cellsPerSlot}`
                            )
                            span.float-end.schedule-drop-indicator.m-1.text-warning.schedule-drop-requested Weak Match
                            span.float-end.schedule-drop-indicator.m-1.text-info.schedule-drop-required Strong Match
                            span.float-end.schedule-drop-indicator.m-1.text-success.schedule-drop-suggested Suggested
                            span.float-end.schedule-drop-indicator.m-1.text-dark.schedule-drop-confirmed Confirmed
                            span.float-end.schedule-drop-indicator.m-1.text-danger.schedule-drop-rejected Rejected

                div(style=`grid-row: ${timeslots.length+2}; grid-column: ${headerColumns+1} / span ${locations.length*cellsPerSlot}`)
                    #schedule-legend.my-2(
                        style=`grid-template-columns: repeat(4, 1fr); grid-auto-rows: minmax(${rowHeight}px, auto);`
                    )
                            .bg-warning-subtle.p-2 Weak Match
                            .bg-info-subtle.p-2 Strong Match
                            .bg-success-subtle.p-2 Suggested
                            //.bg-success-subtle.p-2 Confirmed
                            .bg-danger-subtle.p-2 Rejected

                -
                    const maxHeight = _.max(scenes, scene => {
                        if (scene.status === 'ready') { return scene.timeslot_count; }
                        return 0;
                    });
                div( style=`grid-row: ${timeslots.length+3}; grid-column: ${headerColumns+1} / span ${locations.length*cellsPerSlot}`)
                    #unscheduled.schedule-cell.schedule-slot.bg-light.border(
                        data-location-id='none'
                        data-timeslot-id='none'
                        data-pos-x=1
                        data-pos-y=2
                        style=`grid-template-columns: repeat(${locations.length*cellsPerSlot}, 1fr); grid-template-rows: 30px; grid-auto-rows: ${rowHeight}px; min-height: ${rowHeight}px`
                    )
                        div.px-2.py-1(style='grid-row:1; grid-column: 1 / span 2')
                            span.float-start.text-dark(style='z-index:0') Unscheduled

                each scene in scenes
                    +sceneScheduleItem(scene)

    link(rel='stylesheet' href='/stylesheets/schedule.css')
append scripts
    script(src='https://code.jquery.com/ui/1.13.2/jquery-ui.min.js')
    script(src='/javascripts/schedule.js')
